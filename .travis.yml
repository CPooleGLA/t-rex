# Based on the "trust" template v0.1.1
# https://github.com/japaric/trust/tree/v0.1.1

dist: trusty
language: rust
services:
  - docker
sudo: required

env:
  global:
    - DBCONN=postgresql://t_rex:t_rex@127.0.0.1:5439/t_rex_tests
    # This will be part of the release tarball
    - CRATE_NAME=t-rex
    - MAKE_DEB=yes
    - DEB_MAINTAINER="Pirmin Kalberer <pi_deb@sourcepole.ch>"
    - DEB_DESCRIPTION="t-rex vector tile server"

matrix:
  include:
    # Linux
    #- env: TARGET=i686-unknown-linux-gnu
    #- env: TARGET=i686-unknown-linux-musl
    # Build on Ubuntu trusty fails with "SIGSEGV: invalid memory reference"
    # since https://travis-ci.org/github/t-rex-tileserver/t-rex/jobs/737074992
    #- env: TARGET=x86_64-unknown-linux-gnu
    #- env: TARGET=x86_64-unknown-linux-musl

    # OSX
    #- env: TARGET=i686-apple-darwin
    #  os: osx
    - env: TARGET=x86_64-apple-darwin
      os: osx

    # *BSD
    #- env: TARGET=i686-unknown-freebsd DISABLE_TESTS=1
    #- env: TARGET=x86_64-unknown-freebsd DISABLE_TESTS=1
    #- env: TARGET=x86_64-unknown-netbsd DISABLE_TESTS=1

    # Other architectures
    #- env: TARGET=aarch64-unknown-linux-gnu
    #- env: TARGET=armv7-unknown-linux-gnueabihf
    #- env: TARGET=mips-unknown-linux-gnu
    #- env: TARGET=mips64-unknown-linux-gnuabi64
    #- env: TARGET=mips64el-unknown-linux-gnuabi64
    #- env: TARGET=mipsel-unknown-linux-gnu
    #- env: TARGET=powerpc-unknown-linux-gnu
    #- env: TARGET=powerpc64-unknown-linux-gnu
    #- env: TARGET=powerpc64le-unknown-linux-gnu
    #- env: TARGET=s390x-unknown-linux-gnu DISABLE_TESTS=1

    # Testing other channels
    #- env: TARGET=x86_64-unknown-linux-gnu
    #  rust: nightly
    #- env: TARGET=x86_64-apple-darwin
    #  os: osx
    #  rust: nightly

before_install:
  - set -e
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then docker run -p 127.0.0.1:5439:5432 -d --name trextestdb sourcepole/trextestdb; fi

install:
  - sh ci/install.sh
  - source ~/.cargo/env || true

script:
  - bash ci/script.sh

after_script: set +e

before_deploy:
  - sh ci/before_deploy.sh

deploy:
  api_key:
    secure: vX88w3SdgqUmWpFROgBRtR3OA89kkgExXzvD7x9Rt/8GhXgjF86q4DoiIPtk8qQneeqo3xmU0MhQlorWWCE+PhBno2M4lix0p3jCHrs3q10ez8YqGRwh88bCB6cVCBervBXi2dBkSHpJL5qc0VDtHxfJGe3dfJ75BcwNedD9nNwiuuPPy0eIZkOFpoV1QEKnwM5JdDibE24EEIaygGQbgxdG5KhSjSubL4yyFftxMbd0p12F6TVqpSDLXW34iEAjaaAdmAF3mQDUWhg/CVK/4HrLZq7dDP/m1YIcRzFlMKzxUxQSUAe27gsyN92ddbLqGE1vKgaTfY904OHbAyWTNvIVLlYp4DwSCVFMdsGsTEhfY1sok64vPEk6jzz43tds1OGvjWafzksYslyml3DSKLCG3myIGxFaobMraBhBl2m0wEv3uSt5wPfFm7iSRfQsXHQXBThJHvTIWfYLLsQmS5tnV1H3yp0HnJyUEb3gPgtiX7iTwTwBxkFS6UPPrAPbSstAq2YVdxvmxWPKiKvUw1tuy8rX/fQFR7GgEoPffQaa574gfT2Sz2f4qEnUqxVwU1S1tFHDAPNazBZoOOHPHhehxPcAMqdGWaVcdj2X5WhBceFslvpbRQahR9kTGgMBk69Qy9Xe0VveL+tdLeebTvsIh/7IAk3Iw2jB37ENwJk=
  file_glob: true
  file:
    - $CRATE_NAME-$TRAVIS_TAG-$TARGET.*
    - "*.deb"
  on:
    # TODO Here you can pick which targets will generate binary releases
    # In this example, there are some targets that are tested using the stable
    # and nightly channels. This condition makes sure there is only one release
    # for such targets and that's generated using the stable channel
    condition: $TRAVIS_RUST_VERSION = stable
    tags: true
  provider: releases
  skip_cleanup: true

cache: cargo
before_cache:
  # Travis can't cache files that are not readable by "others"
  - chmod -R a+r $HOME/.cargo

# branches:
#   only:
#     # release tags
#     - /^v\d+\.\d+\.\d+.*$/
#     - master

notifications:
  email:
    on_success: never
